syntax = "proto3";

package activity;
import "google/protobuf/timestamp.proto";
option go_package = "proto/activity";

// Activity represents activity object
message Activity {
  // Id - unique identifier
  string Id = 1;
  // Owner - sample owner
  string Owner = 2;
  // Typ - type owner
  string Type = 3;
  // Family - sample family
  string Family = 4;
  //DateFrom
  google.protobuf.Timestamp DateFrom = 5;
  //DateTo
  google.protobuf.Timestamp DateTo = 6;
}

// ActivityType represents activityType object
message ActivityType {
  // Id - unique identifier
  string Id = 1;
  // Family - family id
  string Family = 2;
  // Name - name type
  string Name = 3;
  // Description - description of the type
  string Description = 4;
}

// Request to create a new sample
message CreateActivityRequest {
  // Owner - sample owner
  string Owner = 1;
  // Typ - type owner
  string Type = 2;
  // Family - sample family
  string Family = 3;
  //DateFrom
  google.protobuf.Timestamp DateFrom = 4;
  //DateTo
  google.protobuf.Timestamp DateTo = 5;
}

// request to update sample
message UpdateActivityRequest {
  // Id - unique identifier
  string Id = 1;
  // Owner - sample owner
  string Owner = 2;
  // Typ - type owner
  string Type = 3;
  // Family - sample family
  string Family = 4;
  //DateFrom
  google.protobuf.Timestamp DateFrom = 5;
  //DateTo
  google.protobuf.Timestamp DateTo = 6;
}

message ListActivitiesRequest {
  //Owner - name
  string Owner = 1;
}

message ListActivitiesByFamilyRequest {
  //Owner - name
  string Family = 1;
}

// request with sample id
message ActivityIdRequest {
  // Id - unique identifier
  string Id = 1;
}

// Request to create a new sample
message CreateActivityTypeRequest {
  // Family - family id
  string Family = 1;
  // Name - name type
  string Name = 2;
  // Description - description of the type
  string Description = 3;
}

// request to update sample
message UpdateActivityTypeRequest {
  // Id - unique identifier
  string Id = 1;
  // Family - family id
  string Family = 2;
  // Name - name type
  string Name = 3;
  // Description - description of the type
  string Description = 4;
}

// request with sample id
message ActivityTypeIdRequest {
  string Id = 1;
}

// request with sample timesheet id
message ListActivityTypesRequest {
  string Family = 1;
}

// SearchResponse represents result of sample search
message ListActivitiesResponse  {
  // Samples - list of samples found
  repeated Activity Activities = 1;
}

// SearchResponse represents result of sample search
message ListActivityTypesResponse  {
  // Samples - list of samples found
  repeated ActivityType ActyvityTypes = 1;
}

// empty response
message EmptyResponse {}

// SampleService allows manipulating with samples
service ActivityService {
  // Create creates a new sample
  rpc Create(CreateActivityRequest) returns (Activity) {}
  // Update updates an existent sample
  rpc Update(UpdateActivityRequest) returns (Activity) {}
  // Get retrieves a sample by id
  rpc Get(ActivityIdRequest) returns (Activity) {}
  // Search retrieves samples by owner
  rpc ListActivities(ListActivitiesRequest) returns (ListActivitiesResponse) {}
  // Search retrieves samples by family
  rpc ListActivitiesByFamily(ListActivitiesByFamilyRequest) returns (ListActivitiesResponse) {}
  // Delete sample
  rpc Delete(ActivityIdRequest) returns (EmptyResponse) {}
  // Create creates a new sample
  rpc CreateActivityType(CreateActivityTypeRequest) returns (ActivityType) {}
  // Update updates an existent sample
  rpc UpdateActivityType(UpdateActivityTypeRequest) returns (ActivityType) {}
  // Get retrieves a sample by id
  rpc GetActivityType(ActivityTypeIdRequest) returns (ActivityType) {}
  // Search searches samples
  rpc ListActivityTypes(ListActivityTypesRequest) returns (ListActivityTypesResponse) {}
  // Delete sample
  rpc DeleteActivityType(ActivityTypeIdRequest) returns (EmptyResponse) {}
}