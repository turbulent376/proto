// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: timesheet/timesheet.proto

package timesheet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Timesheet represents timesheet object
type Timesheet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id - unique identifier
	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// Owner - sample owner
	Owner string `protobuf:"bytes,2,opt,name=Owner,proto3" json:"Owner,omitempty"`
	//DateFrom
	DateFrom *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=DateFrom,proto3" json:"DateFrom,omitempty"`
	//DateTo
	DateTo *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=DateTo,proto3" json:"DateTo,omitempty"`
}

func (x *Timesheet) Reset() {
	*x = Timesheet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_timesheet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timesheet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timesheet) ProtoMessage() {}

func (x *Timesheet) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_timesheet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timesheet.ProtoReflect.Descriptor instead.
func (*Timesheet) Descriptor() ([]byte, []int) {
	return file_timesheet_timesheet_proto_rawDescGZIP(), []int{0}
}

func (x *Timesheet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Timesheet) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Timesheet) GetDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFrom
	}
	return nil
}

func (x *Timesheet) GetDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTo
	}
	return nil
}

// Event represents event object
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id - unique identifier
	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// TimesheetId - timesheet id
	TimesheetId string `protobuf:"bytes,2,opt,name=TimesheetId,proto3" json:"TimesheetId,omitempty"`
	// Subject - sample subject
	Subject string `protobuf:"bytes,3,opt,name=Subject,proto3" json:"Subject,omitempty"`
	// WeekDay - day of the lesson
	WeekDay string `protobuf:"bytes,4,opt,name=WeekDay,proto3" json:"WeekDay,omitempty"`
	// TimeStart lesson start time
	TimeStart *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=TimeStart,proto3" json:"TimeStart,omitempty"`
	// TimeEnd lesson start time
	TimeEnd *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=TimeEnd,proto3" json:"TimeEnd,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_timesheet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_timesheet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_timesheet_timesheet_proto_rawDescGZIP(), []int{1}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetTimesheetId() string {
	if x != nil {
		return x.TimesheetId
	}
	return ""
}

func (x *Event) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Event) GetWeekDay() string {
	if x != nil {
		return x.WeekDay
	}
	return ""
}

func (x *Event) GetTimeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeStart
	}
	return nil
}

func (x *Event) GetTimeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeEnd
	}
	return nil
}

// Request to create a new sample
type CreateTimesheetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Owner - sample owner
	Owner string `protobuf:"bytes,1,opt,name=Owner,proto3" json:"Owner,omitempty"`
	//DateFrom
	DateFrom *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=DateFrom,proto3" json:"DateFrom,omitempty"`
	//DateTo
	DateTo *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=DateTo,proto3" json:"DateTo,omitempty"`
}

func (x *CreateTimesheetRequest) Reset() {
	*x = CreateTimesheetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_timesheet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTimesheetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTimesheetRequest) ProtoMessage() {}

func (x *CreateTimesheetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_timesheet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTimesheetRequest.ProtoReflect.Descriptor instead.
func (*CreateTimesheetRequest) Descriptor() ([]byte, []int) {
	return file_timesheet_timesheet_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTimesheetRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *CreateTimesheetRequest) GetDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFrom
	}
	return nil
}

func (x *CreateTimesheetRequest) GetDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTo
	}
	return nil
}

// request to update sample
type UpdateTimesheetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id - unique identifier
	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// Owner - sample owner
	Owner string `protobuf:"bytes,2,opt,name=Owner,proto3" json:"Owner,omitempty"`
	//DateFrom
	DateFrom *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=DateFrom,proto3" json:"DateFrom,omitempty"`
	//DateTo
	DateTo *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=DateTo,proto3" json:"DateTo,omitempty"`
}

func (x *UpdateTimesheetRequest) Reset() {
	*x = UpdateTimesheetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_timesheet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTimesheetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTimesheetRequest) ProtoMessage() {}

func (x *UpdateTimesheetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_timesheet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTimesheetRequest.ProtoReflect.Descriptor instead.
func (*UpdateTimesheetRequest) Descriptor() ([]byte, []int) {
	return file_timesheet_timesheet_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateTimesheetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTimesheetRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *UpdateTimesheetRequest) GetDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFrom
	}
	return nil
}

func (x *UpdateTimesheetRequest) GetDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTo
	}
	return nil
}

type SearchTimesheetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//Owner - name
	Owner string `protobuf:"bytes,1,opt,name=Owner,proto3" json:"Owner,omitempty"`
	//DateFrom
	DateFromSearch *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=DateFromSearch,proto3" json:"DateFromSearch,omitempty"`
	//DateTo
	DateToSearch *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=DateToSearch,proto3" json:"DateToSearch,omitempty"`
}

func (x *SearchTimesheetRequest) Reset() {
	*x = SearchTimesheetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_timesheet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTimesheetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTimesheetRequest) ProtoMessage() {}

func (x *SearchTimesheetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_timesheet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTimesheetRequest.ProtoReflect.Descriptor instead.
func (*SearchTimesheetRequest) Descriptor() ([]byte, []int) {
	return file_timesheet_timesheet_proto_rawDescGZIP(), []int{4}
}

func (x *SearchTimesheetRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *SearchTimesheetRequest) GetDateFromSearch() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFromSearch
	}
	return nil
}

func (x *SearchTimesheetRequest) GetDateToSearch() *timestamppb.Timestamp {
	if x != nil {
		return x.DateToSearch
	}
	return nil
}

// request with sample id
type TimesheetIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id - unique identifier
	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *TimesheetIdRequest) Reset() {
	*x = TimesheetIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_timesheet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimesheetIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimesheetIdRequest) ProtoMessage() {}

func (x *TimesheetIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_timesheet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimesheetIdRequest.ProtoReflect.Descriptor instead.
func (*TimesheetIdRequest) Descriptor() ([]byte, []int) {
	return file_timesheet_timesheet_proto_rawDescGZIP(), []int{5}
}

func (x *TimesheetIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request to create a new sample
type CreateEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id - unique identifier
	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// TimesheetId - timesheet id
	TimesheetId string `protobuf:"bytes,2,opt,name=TimesheetId,proto3" json:"TimesheetId,omitempty"`
	// Subject - sample subject
	Subject string `protobuf:"bytes,3,opt,name=Subject,proto3" json:"Subject,omitempty"`
	// WeekDay - day of thr lesson
	WeekDay string `protobuf:"bytes,4,opt,name=WeekDay,proto3" json:"WeekDay,omitempty"`
	// TimeStart
	TimeStart *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=TimeStart,proto3" json:"TimeStart,omitempty"`
	// TimeEnd
	TimeEnd *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=TimeEnd,proto3" json:"TimeEnd,omitempty"`
}

func (x *CreateEventRequest) Reset() {
	*x = CreateEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_timesheet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventRequest) ProtoMessage() {}

func (x *CreateEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_timesheet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventRequest.ProtoReflect.Descriptor instead.
func (*CreateEventRequest) Descriptor() ([]byte, []int) {
	return file_timesheet_timesheet_proto_rawDescGZIP(), []int{6}
}

func (x *CreateEventRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateEventRequest) GetTimesheetId() string {
	if x != nil {
		return x.TimesheetId
	}
	return ""
}

func (x *CreateEventRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CreateEventRequest) GetWeekDay() string {
	if x != nil {
		return x.WeekDay
	}
	return ""
}

func (x *CreateEventRequest) GetTimeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeStart
	}
	return nil
}

func (x *CreateEventRequest) GetTimeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeEnd
	}
	return nil
}

// request to update sample
type UpdateEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id - unique identifier
	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// TimesheetId - timesheet id
	TimesheetId string `protobuf:"bytes,2,opt,name=TimesheetId,proto3" json:"TimesheetId,omitempty"`
	// Subject - sample subject
	Subject string `protobuf:"bytes,3,opt,name=Subject,proto3" json:"Subject,omitempty"`
	// WeekDay - day of thr lesson
	WeekDay string `protobuf:"bytes,4,opt,name=WeekDay,proto3" json:"WeekDay,omitempty"`
	// TimeStart
	TimeStart *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=TimeStart,proto3" json:"TimeStart,omitempty"`
	// TimeEnd
	TimeEnd *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=TimeEnd,proto3" json:"TimeEnd,omitempty"`
}

func (x *UpdateEventRequest) Reset() {
	*x = UpdateEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_timesheet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEventRequest) ProtoMessage() {}

func (x *UpdateEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_timesheet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEventRequest.ProtoReflect.Descriptor instead.
func (*UpdateEventRequest) Descriptor() ([]byte, []int) {
	return file_timesheet_timesheet_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateEventRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateEventRequest) GetTimesheetId() string {
	if x != nil {
		return x.TimesheetId
	}
	return ""
}

func (x *UpdateEventRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *UpdateEventRequest) GetWeekDay() string {
	if x != nil {
		return x.WeekDay
	}
	return ""
}

func (x *UpdateEventRequest) GetTimeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeStart
	}
	return nil
}

func (x *UpdateEventRequest) GetTimeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeEnd
	}
	return nil
}

// request with sample id
type EventIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *EventIdRequest) Reset() {
	*x = EventIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_timesheet_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventIdRequest) ProtoMessage() {}

func (x *EventIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_timesheet_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventIdRequest.ProtoReflect.Descriptor instead.
func (*EventIdRequest) Descriptor() ([]byte, []int) {
	return file_timesheet_timesheet_proto_rawDescGZIP(), []int{8}
}

func (x *EventIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// request with sample timesheet id
type EventsIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimesheetId string `protobuf:"bytes,1,opt,name=TimesheetId,proto3" json:"TimesheetId,omitempty"`
}

func (x *EventsIdRequest) Reset() {
	*x = EventsIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_timesheet_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventsIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsIdRequest) ProtoMessage() {}

func (x *EventsIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_timesheet_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsIdRequest.ProtoReflect.Descriptor instead.
func (*EventsIdRequest) Descriptor() ([]byte, []int) {
	return file_timesheet_timesheet_proto_rawDescGZIP(), []int{9}
}

func (x *EventsIdRequest) GetTimesheetId() string {
	if x != nil {
		return x.TimesheetId
	}
	return ""
}

// SearchResponse represents result of sample search
type SearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Samples - list of samples found
	Events []*Event `protobuf:"bytes,1,rep,name=Events,proto3" json:"Events,omitempty"`
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_timesheet_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_timesheet_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_timesheet_timesheet_proto_rawDescGZIP(), []int{10}
}

func (x *SearchResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

// empty response
type EmptyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_timesheet_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_timesheet_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_timesheet_timesheet_proto_rawDescGZIP(), []int{11}
}

var File_timesheet_timesheet_proto protoreflect.FileDescriptor

var file_timesheet_timesheet_proto_rawDesc = []byte{
	0x0a, 0x19, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d, 0x01, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x68, 0x65, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x08, 0x44,
	0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x44, 0x61, 0x74, 0x65, 0x46,
	0x72, 0x6f, 0x6d, 0x12, 0x32, 0x0a, 0x06, 0x44, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x06, 0x44, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x22, 0xdd, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x57, 0x65, 0x65, 0x6b, 0x44, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x57, 0x65, 0x65, 0x6b, 0x44, 0x61, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x34, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07,
	0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x65,
	0x46, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x44, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x32, 0x0a, 0x06, 0x44, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x22, 0xaa, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x08, 0x44, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x32, 0x0a,
	0x06, 0x44, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x44, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x22, 0xb2, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x68, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x42, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x44, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x3e, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x65, 0x54, 0x6f,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x44, 0x61, 0x74, 0x65, 0x54, 0x6f,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x24, 0x0a, 0x12, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68,
	0x65, 0x65, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x22, 0xea, 0x01, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68,
	0x65, 0x65, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x57, 0x65, 0x65, 0x6b, 0x44, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x57, 0x65, 0x65, 0x6b, 0x44, 0x61, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x22, 0xea, 0x01, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x57, 0x65, 0x65, 0x6b, 0x44, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x57,
	0x65, 0x65, 0x6b, 0x44, 0x61, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x34, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x54,
	0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x22, 0x20, 0x0a, 0x0e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x0f, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x49, 0x64, 0x22, 0x3a, 0x0a,
	0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x28, 0x0a, 0x06, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x06, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xb1, 0x05, 0x0a, 0x10, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x43, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x68, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65,
	0x65, 0x74, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x21,
	0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x03, 0x47, 0x65, 0x74,
	0x12, 0x1d, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x68, 0x65, 0x65, 0x74, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x21, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65,
	0x65, 0x74, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65,
	0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x40, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x1d, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x10, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x19, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x00,
	0x12, 0x46, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x19, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68,
	0x65, 0x65, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x11,
	0x5a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_timesheet_timesheet_proto_rawDescOnce sync.Once
	file_timesheet_timesheet_proto_rawDescData = file_timesheet_timesheet_proto_rawDesc
)

func file_timesheet_timesheet_proto_rawDescGZIP() []byte {
	file_timesheet_timesheet_proto_rawDescOnce.Do(func() {
		file_timesheet_timesheet_proto_rawDescData = protoimpl.X.CompressGZIP(file_timesheet_timesheet_proto_rawDescData)
	})
	return file_timesheet_timesheet_proto_rawDescData
}

var file_timesheet_timesheet_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_timesheet_timesheet_proto_goTypes = []interface{}{
	(*Timesheet)(nil),              // 0: timesheet.Timesheet
	(*Event)(nil),                  // 1: timesheet.Event
	(*CreateTimesheetRequest)(nil), // 2: timesheet.CreateTimesheetRequest
	(*UpdateTimesheetRequest)(nil), // 3: timesheet.UpdateTimesheetRequest
	(*SearchTimesheetRequest)(nil), // 4: timesheet.SearchTimesheetRequest
	(*TimesheetIdRequest)(nil),     // 5: timesheet.TimesheetIdRequest
	(*CreateEventRequest)(nil),     // 6: timesheet.CreateEventRequest
	(*UpdateEventRequest)(nil),     // 7: timesheet.UpdateEventRequest
	(*EventIdRequest)(nil),         // 8: timesheet.EventIdRequest
	(*EventsIdRequest)(nil),        // 9: timesheet.EventsIdRequest
	(*SearchResponse)(nil),         // 10: timesheet.SearchResponse
	(*EmptyResponse)(nil),          // 11: timesheet.EmptyResponse
	(*timestamppb.Timestamp)(nil),  // 12: google.protobuf.Timestamp
}
var file_timesheet_timesheet_proto_depIdxs = []int32{
	12, // 0: timesheet.Timesheet.DateFrom:type_name -> google.protobuf.Timestamp
	12, // 1: timesheet.Timesheet.DateTo:type_name -> google.protobuf.Timestamp
	12, // 2: timesheet.Event.TimeStart:type_name -> google.protobuf.Timestamp
	12, // 3: timesheet.Event.TimeEnd:type_name -> google.protobuf.Timestamp
	12, // 4: timesheet.CreateTimesheetRequest.DateFrom:type_name -> google.protobuf.Timestamp
	12, // 5: timesheet.CreateTimesheetRequest.DateTo:type_name -> google.protobuf.Timestamp
	12, // 6: timesheet.UpdateTimesheetRequest.DateFrom:type_name -> google.protobuf.Timestamp
	12, // 7: timesheet.UpdateTimesheetRequest.DateTo:type_name -> google.protobuf.Timestamp
	12, // 8: timesheet.SearchTimesheetRequest.DateFromSearch:type_name -> google.protobuf.Timestamp
	12, // 9: timesheet.SearchTimesheetRequest.DateToSearch:type_name -> google.protobuf.Timestamp
	12, // 10: timesheet.CreateEventRequest.TimeStart:type_name -> google.protobuf.Timestamp
	12, // 11: timesheet.CreateEventRequest.TimeEnd:type_name -> google.protobuf.Timestamp
	12, // 12: timesheet.UpdateEventRequest.TimeStart:type_name -> google.protobuf.Timestamp
	12, // 13: timesheet.UpdateEventRequest.TimeEnd:type_name -> google.protobuf.Timestamp
	1,  // 14: timesheet.SearchResponse.Events:type_name -> timesheet.Event
	2,  // 15: timesheet.TimesheetService.Create:input_type -> timesheet.CreateTimesheetRequest
	3,  // 16: timesheet.TimesheetService.Update:input_type -> timesheet.UpdateTimesheetRequest
	5,  // 17: timesheet.TimesheetService.Get:input_type -> timesheet.TimesheetIdRequest
	4,  // 18: timesheet.TimesheetService.Search:input_type -> timesheet.SearchTimesheetRequest
	5,  // 19: timesheet.TimesheetService.Delete:input_type -> timesheet.TimesheetIdRequest
	6,  // 20: timesheet.TimesheetService.CreateEvent:input_type -> timesheet.CreateEventRequest
	7,  // 21: timesheet.TimesheetService.UpdateEvent:input_type -> timesheet.UpdateEventRequest
	8,  // 22: timesheet.TimesheetService.GetEvent:input_type -> timesheet.EventIdRequest
	8,  // 23: timesheet.TimesheetService.SearchEvents:input_type -> timesheet.EventIdRequest
	8,  // 24: timesheet.TimesheetService.DeleteEvent:input_type -> timesheet.EventIdRequest
	0,  // 25: timesheet.TimesheetService.Create:output_type -> timesheet.Timesheet
	0,  // 26: timesheet.TimesheetService.Update:output_type -> timesheet.Timesheet
	0,  // 27: timesheet.TimesheetService.Get:output_type -> timesheet.Timesheet
	0,  // 28: timesheet.TimesheetService.Search:output_type -> timesheet.Timesheet
	11, // 29: timesheet.TimesheetService.Delete:output_type -> timesheet.EmptyResponse
	1,  // 30: timesheet.TimesheetService.CreateEvent:output_type -> timesheet.Event
	1,  // 31: timesheet.TimesheetService.UpdateEvent:output_type -> timesheet.Event
	1,  // 32: timesheet.TimesheetService.GetEvent:output_type -> timesheet.Event
	10, // 33: timesheet.TimesheetService.SearchEvents:output_type -> timesheet.SearchResponse
	11, // 34: timesheet.TimesheetService.DeleteEvent:output_type -> timesheet.EmptyResponse
	25, // [25:35] is the sub-list for method output_type
	15, // [15:25] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_timesheet_timesheet_proto_init() }
func file_timesheet_timesheet_proto_init() {
	if File_timesheet_timesheet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_timesheet_timesheet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timesheet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timesheet_timesheet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timesheet_timesheet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTimesheetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timesheet_timesheet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTimesheetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timesheet_timesheet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTimesheetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timesheet_timesheet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimesheetIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timesheet_timesheet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timesheet_timesheet_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timesheet_timesheet_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timesheet_timesheet_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventsIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timesheet_timesheet_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timesheet_timesheet_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_timesheet_timesheet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_timesheet_timesheet_proto_goTypes,
		DependencyIndexes: file_timesheet_timesheet_proto_depIdxs,
		MessageInfos:      file_timesheet_timesheet_proto_msgTypes,
	}.Build()
	File_timesheet_timesheet_proto = out.File
	file_timesheet_timesheet_proto_rawDesc = nil
	file_timesheet_timesheet_proto_goTypes = nil
	file_timesheet_timesheet_proto_depIdxs = nil
}
